[workspace]
resolver = "2"
members = [
    "ce-core",
    "ce-shell",
    "checko",
    "checkr",
    "driver",
    "envs/*",
    "gcl",
    "inspectify",
    "xtask",
]

[workspace.package]
version = "0.1.21"
repository = "https://github.com/team-checkr/checkr/"
authors = [
    "Oliver Bøving <oliver@bvng.dk>",
    "Camilla Færch <camilla_faerch@hotmail.com>",
]
license = "MIT OR Apache-2.0"

[workspace.dependencies]
axum = { version = "0.6.2", features = ["macros", "ws"] }
axum-macros = "0.3.1"
bitflags = "2.4.0"
ce-core = { path = "./ce-core" }
ce-graph = { path = "./envs/ce-graph" }
ce-parse = { path = "./envs/ce-parse" }
ce-pv = { path = "./envs/ce-pv" }
ce-shell = { path = "./ce-shell" }
ce-sign = { path = "./envs/ce-sign" }
checko = { path = "./checko" }
checkr = { path = "./checkr" }
clap = { version = "4.4.4", features = ["derive"] }
color-eyre = "0.6.2"
comfy-table = { version = "7.0.1", default-features = false }
dioxus = "0.4.0"
dioxus-liveview = { version = "0.4.0", features = ["axum"] }
driver = { path = "./driver" }
futures-util = "0.3.28"
gcl = { path = "./gcl" }
indexmap = { version = "2.0.0", features = ["serde"] }
inspectify = { path = "./inspectify" }
itertools = "0.11.0"
miette = { version = "5.10.0", features = ["fancy"] }
once_cell = "1.18.0"
petgraph = { version = "0.6.3" }
rand = { version = "0.8.5", features = ["small_rng"] }
serde = { version = "1.0.152", features = ["derive", "rc"] }
serde_json = "1.0.91"
thiserror = "1.0.38"
tokio = { version = "1.25.0", features = ["full"] }
toml = { version = "0.8.0", features = ["indexmap"] }
tracing = "0.1.37"
tracing-error = "0.2.0"
tracing-subscriber = { version = "0.3.16", features = ["env-filter"] }
typeshare = "1.0.0"

[profile.test]
opt-level = 1

[workspace.metadata.release]
publish = false
tag-name = "v{{version}}"
shared-version = true
pre-release-hook = ["just", "release-hook"]

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.2.0"
# CI backends to support (see 'cargo dist generate-ci')
ci = ["github"]
# The installers to generate for each app
installers = ["shell", "powershell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
    "x86_64-unknown-linux-gnu",
    "x86_64-apple-darwin",
    "x86_64-pc-windows-msvc",
    "aarch64-apple-darwin",
]

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
